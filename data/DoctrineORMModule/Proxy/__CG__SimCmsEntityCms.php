<?php

namespace DoctrineORMModule\Proxy\__CG__\SimCms\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Cms extends \SimCms\Entity\Cms implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'locale', 'title', 'description', 'content', 'url', 'urlIndex', 'entry', 'output', 'params', 'showDate', 'showTime', 'destak', 'orderBy', 'revision', 'state', 'visible', 'access', 'terminal', 'created', 'createdBy', 'modified', 'modifiedBy', 'navigationName', 'navigation');
        }

        return array('__isInitialized__', 'id', 'locale', 'title', 'description', 'content', 'url', 'urlIndex', 'entry', 'output', 'params', 'showDate', 'showTime', 'destak', 'orderBy', 'revision', 'state', 'visible', 'access', 'terminal', 'created', 'createdBy', 'modified', 'modifiedBy', 'navigationName', 'navigation');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Cms $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocale()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocale', array());

        return parent::getLocale();
    }

    /**
     * {@inheritDoc}
     */
    public function setLocale($locale)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLocale', array($locale));

        return parent::setLocale($locale);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getContent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContent', array());

        return parent::getContent();
    }

    /**
     * {@inheritDoc}
     */
    public function setContent($content)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContent', array($content));

        return parent::setContent($content);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', array());

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', array($url));

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrlIndex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrlIndex', array());

        return parent::getUrlIndex();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrlIndex($urlIndex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrlIndex', array($urlIndex));

        return parent::setUrlIndex($urlIndex);
    }

    /**
     * {@inheritDoc}
     */
    public function getentry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getentry', array());

        return parent::getentry();
    }

    /**
     * {@inheritDoc}
     */
    public function setentry($entry)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setentry', array($entry));

        return parent::setentry($entry);
    }

    /**
     * {@inheritDoc}
     */
    public function getoutput()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getoutput', array());

        return parent::getoutput();
    }

    /**
     * {@inheritDoc}
     */
    public function setoutput($output)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setoutput', array($output));

        return parent::setoutput($output);
    }

    /**
     * {@inheritDoc}
     */
    public function getParams()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParams', array());

        return parent::getParams();
    }

    /**
     * {@inheritDoc}
     */
    public function setParams($params)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParams', array($params));

        return parent::setParams($params);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowDate', array());

        return parent::getShowDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowDate($showDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowDate', array($showDate));

        return parent::setShowDate($showDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getShowTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShowTime', array());

        return parent::getShowTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setShowTime($showTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShowTime', array($showTime));

        return parent::setShowTime($showTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getDestak()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDestak', array());

        return parent::getDestak();
    }

    /**
     * {@inheritDoc}
     */
    public function setDestak($destak)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDestak', array($destak));

        return parent::setDestak($destak);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrderBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrderBy', array());

        return parent::getOrderBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrderBy($orderBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrderBy', array($orderBy));

        return parent::setOrderBy($orderBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getRevision()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRevision', array());

        return parent::getRevision();
    }

    /**
     * {@inheritDoc}
     */
    public function setRevision($revision)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRevision', array($revision));

        return parent::setRevision($revision);
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', array());

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function setState($state)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setState', array($state));

        return parent::setState($state);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisible', array());

        return parent::getVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisible($visible)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisible', array($visible));

        return parent::setVisible($visible);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccess()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccess', array());

        return parent::getAccess();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccess($access)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccess', array($access));

        return parent::setAccess($access);
    }

    /**
     * {@inheritDoc}
     */
    public function getTerminal()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTerminal', array());

        return parent::getTerminal();
    }

    /**
     * {@inheritDoc}
     */
    public function setTerminal($terminal)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTerminal', array($terminal));

        return parent::setTerminal($terminal);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', array());

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy($createdBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', array($createdBy));

        return parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getModified()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModified', array());

        return parent::getModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setModified($modified)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModified', array($modified));

        return parent::setModified($modified);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', array());

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy($modifiedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', array($modifiedBy));

        return parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getNavigationName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNavigationName', array());

        return parent::getNavigationName();
    }

    /**
     * {@inheritDoc}
     */
    public function setNavigationName($navigationName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNavigationName', array($navigationName));

        return parent::setNavigationName($navigationName);
    }

    /**
     * {@inheritDoc}
     */
    public function getNavigation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNavigation', array());

        return parent::getNavigation();
    }

    /**
     * {@inheritDoc}
     */
    public function setNavigation($navigation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNavigation', array($navigation));

        return parent::setNavigation($navigation);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
