<?php

namespace DoctrineORMModule\Proxy\__CG__\SimNavigation\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Navigation extends \SimNavigation\Entity\Navigation implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'nameGroup', 'label', 'route', 'controller', 'nameAction', 'resource', 'privilege', 'uri', 'fragment', 'identification', 'class', 'title', 'target', 'rel', 'rev', 'numberOrder', 'active', 'visible', 'params', 'registeredBy', 'registeredIn', 'modifiedBy', 'modifiedIn', 'parent', 'role');
        }

        return array('__isInitialized__', 'id', 'nameGroup', 'label', 'route', 'controller', 'nameAction', 'resource', 'privilege', 'uri', 'fragment', 'identification', 'class', 'title', 'target', 'rel', 'rev', 'numberOrder', 'active', 'visible', 'params', 'registeredBy', 'registeredIn', 'modifiedBy', 'modifiedIn', 'parent', 'role');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Navigation $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getLabel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLabel', array());

        return parent::getLabel();
    }

    /**
     * {@inheritDoc}
     */
    public function setLabel($label)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLabel', array($label));

        return parent::setLabel($label);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameGroup()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameGroup', array());

        return parent::getNameGroup();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameGroup($nameGroup)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameGroup', array($nameGroup));

        return parent::setNameGroup($nameGroup);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameAction()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameAction', array());

        return parent::getNameAction();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameAction($nameAction)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameAction', array($nameAction));

        return parent::setNameAction($nameAction);
    }

    /**
     * {@inheritDoc}
     */
    public function getNumberOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNumberOrder', array());

        return parent::getNumberOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setNumberOrder($numberOrder)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNumberOrder', array($numberOrder));

        return parent::setNumberOrder($numberOrder);
    }

    /**
     * {@inheritDoc}
     */
    public function getFragment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFragment', array());

        return parent::getFragment();
    }

    /**
     * {@inheritDoc}
     */
    public function setFragment($fragment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFragment', array($fragment));

        return parent::setFragment($fragment);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentification()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentification', array());

        return parent::getIdentification();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentification($identification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentification', array($identification));

        return parent::setIdentification($identification);
    }

    /**
     * {@inheritDoc}
     */
    public function getClass()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClass', array());

        return parent::getClass();
    }

    /**
     * {@inheritDoc}
     */
    public function setClass($class)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClass', array($class));

        return parent::setClass($class);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTarget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTarget', array());

        return parent::getTarget();
    }

    /**
     * {@inheritDoc}
     */
    public function setTarget($target)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTarget', array($target));

        return parent::setTarget($target);
    }

    /**
     * {@inheritDoc}
     */
    public function getRel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRel', array());

        return parent::getRel();
    }

    /**
     * {@inheritDoc}
     */
    public function setRel($rel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRel', array($rel));

        return parent::setRel($rel);
    }

    /**
     * {@inheritDoc}
     */
    public function getRev()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRev', array());

        return parent::getRev();
    }

    /**
     * {@inheritDoc}
     */
    public function setRev($rev)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRev', array($rev));

        return parent::setRev($rev);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getVisible()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVisible', array());

        return parent::getVisible();
    }

    /**
     * {@inheritDoc}
     */
    public function setVisible($visible)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVisible', array($visible));

        return parent::setVisible($visible);
    }

    /**
     * {@inheritDoc}
     */
    public function getController()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getController', array());

        return parent::getController();
    }

    /**
     * {@inheritDoc}
     */
    public function getControllerName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getControllerName', array());

        return parent::getControllerName();
    }

    /**
     * {@inheritDoc}
     */
    public function setController($controller)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setController', array($controller));

        return parent::setController($controller);
    }

    /**
     * {@inheritDoc}
     */
    public function getParams()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParams', array());

        return parent::getParams();
    }

    /**
     * {@inheritDoc}
     */
    public function setParams($params)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParams', array($params));

        return parent::setParams($params);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoute()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoute', array());

        return parent::getRoute();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoute($route)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoute', array($route));

        return parent::setRoute($route);
    }

    /**
     * {@inheritDoc}
     */
    public function getResource()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResource', array());

        return parent::getResource();
    }

    /**
     * {@inheritDoc}
     */
    public function getResourceNamespace()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResourceNamespace', array());

        return parent::getResourceNamespace();
    }

    /**
     * {@inheritDoc}
     */
    public function setResource($resource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResource', array($resource));

        return parent::setResource($resource);
    }

    /**
     * {@inheritDoc}
     */
    public function getUri()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUri', array());

        return parent::getUri();
    }

    /**
     * {@inheritDoc}
     */
    public function setUri($uri)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUri', array($uri));

        return parent::setUri($uri);
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent($parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrivilege()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrivilege', array());

        return parent::getPrivilege();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrivilege($privilege)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrivilege', array($privilege));

        return parent::setPrivilege($privilege);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegisteredBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegisteredBy', array());

        return parent::getRegisteredBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegisteredBy($registeredBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegisteredBy', array($registeredBy));

        return parent::setRegisteredBy($registeredBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegisteredIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegisteredIn', array());

        return parent::getRegisteredIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegisteredIn($registeredIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegisteredIn', array($registeredIn));

        return parent::setRegisteredIn($registeredIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedBy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedBy', array());

        return parent::getModifiedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedBy($modifiedBy)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedBy', array($modifiedBy));

        return parent::setModifiedBy($modifiedBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedIn', array());

        return parent::getModifiedIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedIn', array());

        return parent::setModifiedIn();
    }

    /**
     * {@inheritDoc}
     */
    public function getRole()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRole', array());

        return parent::getRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setRole($role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRole', array($role));

        return parent::setRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

}
